name: 'Untitled'
version: 'unknown'
project-base-path: 'unknown/{app_ver}' # 项目目录
init-file: './main.py' # 入口文件，相对项目目录
install-requirements: [

]
install-requirements-file: "" # 安装依赖文件，相对项目目录
enable-plugins: [
  
]
include:
  files: []
  dirs: []
  modules: []
  packages: []
# onefile: 2 # 0:文件夹 1:单文件 2:两者
# distpath: 'dist'
timeout: 2700
os-list:
  - 'Linux'
  - 'Windows'
build-pwd: script-base-path # 构建基础路径，可选 root-base-path、script-base-path(默认)、custom-path
custom-args: []
only-linux-args: []
only-windows-args: []
clean-cache: # 禁用选定的缓存，设置"all"则为所有缓存。当前允许的值有："all(全部)","ccache","bytecode(字节码)","compression(压缩)","dll-dependencies(dll依赖项)"，可使用逗号分隔多个值。。
c-compiler:
  # clang: true # boolean
  # mingw64: # boolean
  lto:  # auto(默认),yes,no 启用链接时优化（Link Time Optimization, LTO），减少二进制文件大小并提高性能。
  static-libpython:  # auto(默认),yes,no 控制是否静态链接 Python 运行时库。
windows-specific-controls:
  console-mode: force # force（默认,始终启动控制台）,disable(完全禁用控制台),attach(仅使用现有控制台),hide(创建控制台但立即隐藏（后台运行）)
  icon: package/assets/favicon.ico
  uac-admin: False # boolean,管理员权限
  uac-uiaccess: False # boolean,请求Windows用户控制（UAC）UI访问权限
output-name-template: '{name}_{app_ver}_py{py_ver}_nk{nk_ver}_{os_short}_{arch}{exe_suffix}'
# 检查程序是否运行成功
check-program:
  enable: False
  return-code: 0
  timeout: 500 # 超时时间，单位秒
  check-command: [] # 检查命令参数，列表形式，例如: ["--test"]
  return-output: "success" # 检查程序输出是否包含指定字符串
  throw-exception: False # 是否抛出异常