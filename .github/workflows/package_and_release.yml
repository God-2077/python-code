name: Package and Release

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name (e.g., v1.0.0)'
        required: true
        type: string
      release_name:
        description: 'Release title'
        required: true
        type: string

jobs:
  package-and-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: UPX Setup
      run: |
        mkdir upx
        curl -o upx/upx.exe https://assets.ksable.top/github/upx/upx/v5.0.1/upx.exe
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller pyyaml

    - name: Fix Python encoding (Windows)
      run: |
        # 设置Python使用UTF-8编码
        [System.Environment]::SetEnvironmentVariable('PYTHONUTF8', '1', 'Process')
        # 设置控制台编码为UTF-8
        chcp.com 65001

    - name: Run packaging script
      run: |
        cd package
        python build.py config.yml
        
    # - name: Create Release
    #   id: create_release
    #   uses: actions/create-release@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     tag_name: ${{ github.event.inputs.tag_name }}
    #     release_name: ${{ github.event.inputs.release_name }}
    #     draft: false
    #     prerelease: false

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1  # 使用更活跃维护的 release 操作
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.inputs.tag_name }}
        name: ${{ github.event.inputs.release_name }}
        generate_release_notes: true
        draft: false
        prerelease: false
    # - name: Upload Release Assets
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.create_release.outputs.upload_url }}
    #     asset_path: ./dist/
    #     asset_name: ${{ github.event.inputs.tag_name }}-binaries
    #     asset_content_type: application/octet-stream
        
    - name: Upload Release Assets
      uses: xresloader/upload-to-github-release@main
      env:
       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        file: "./dist/*.exe;./dist/*/*.exe"
        release_id: ${{ steps.create_release.outputs.id }}
        verbose: false
        overwrite: true