name: Package and Release

on:
  workflow_dispatch: # 手动触发

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        ref: main

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        Set-Location -Path $Env:GITHUB_WORKSPACE
        Get-ChildItem -Recurse -Filter requirements.txt | ForEach-Object {
          pip install -r $_.FullName
        }

    - name: Find and Package Latest Scripts
      run: |
        Set-Location -Path $Env:GITHUB_WORKSPACE
        Get-ChildItem -Directory | ForEach-Object {
          $latest_script = Get-ChildItem -Path $_.FullName -Filter *.py | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if ($latest_script) {
            $script_name = [System.IO.Path]::GetFileNameWithoutExtension($latest_script.Name)
            $exe_name = "$script_name.exe"
            pyinstaller --onefile $latest_script.FullName
            Move-Item -Path "dist/$script_name.exe" -Destination "dist/$exe_name"
          }
        }

    - name: Get current date in UTC+8
      id: date
      run: echo "CURRENT_DATE=$(TZ=Asia/Shanghai date +'%y.%m.%d')" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: "v.${{ env.CURRENT_DATE }}"
        release_name: "v.${{ env.CURRENT_DATE }}"
        draft: false
        prerelease: false
        generate_release_notes: true
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Assets
      run: |
        Set-Location -Path $Env:GITHUB_WORKSPACE/dist
        $release_url = "${{ steps.create_release.outputs.html_url }}"
        Get-ChildItem -Filter *.exe | ForEach-Object {
          gh release upload $release_url $_.FullName
        }
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
